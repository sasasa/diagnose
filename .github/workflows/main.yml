#初めにCI（自動テスト）のワークフローを定義させます。
name: UnitTest

on:
  push:
    branches: [ main ]

jobs:
  laravel-tests:
    name: phpunit test
    runs-on: ubuntu-latest
    
    #DB側（MySQLコンテナ）設定
    services:
      mysql: 
        image: mysql/mysql-server:8.0
        ports:
          - 3306:3306
        env:  
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_app
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10 #optionsでMySQLが起動したかヘルスチェックするようにします。
  
    #アプリ側（テスト用DB）設定
    env:
      DB_CONNECTION: mysql
      DB_HOST: mysql.test
      DB_PORT: 3306
      DB_DATABASE: test_app
      DB_USERNAME: sail
      DB_PASSWORD: password
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP 8.1  #phpのバージョン指定（しておかないと後々バージョンエラーになる）
        run: sudo update-alternatives --set php /usr/bin/php8.1
        
      - name: cache vendor 
        id: cache
        uses: actions/cache@v1
        with:
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: composer install
        shell: bash -xe {0} # custom shell
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install -n  --no-progress --no-suggest --prefer-dist --optimize-autoloader
        
      - name: composer dump autoload #requireを使用せず、どこからでも対象のソースやクラスを呼び出せるようにする。
        shell: bash -xe {0} 
        run: composer dump-autoload

      - name: Set hostname
        run: sudo echo "127.0.0.1 mysql.test" | sudo tee -a /etc/hosts

      - name: migrate #DB作成
        shell: bash -xe {0} 
        run: php artisan migrate --force --env=testing

      - name: unit test #テスト実行
        shell: bash -xe {0} 
        run: ./vendor/bin/phpunit
